{"version":3,"file":"scripts.0cb9172569361e0cb642.js","mappings":"yLAIA,IAAMA,EAAOC,SAASC,cAAc,QAE9BC,EAAAA,WACF,WAAYC,EAAMC,EAAeC,EAASC,GAEtC,G,4FAFkD,SAClDC,KAAKC,QAAUR,SAASS,cAAcN,GAClCO,MAAMC,QAAQN,GACd,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAChCL,KAAKC,QAAQM,UAAUC,IAAIV,EAAQO,IAG3C,GAAIF,MAAMC,QAAQL,GACd,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAWO,OAAQD,IACnCL,KAAKC,QAAQO,IAAIT,WAAWA,EAAWM,IAG/CR,EAAcY,YAAYT,KAAKC,S,+CAInC,WACI,OAAOD,KAAKC,a,sEAlBdN,GAsBAe,EAAY,IAAIf,EAAe,MAAOH,EAAM,CAAC,cAAcmB,aAC3DC,EAAW,IAAIjB,EAAe,WAAYe,EAAW,CAAC,aAAcC,aAC1EC,EAASC,aAAa,OAAQ,KAC9BD,EAASC,aAAa,OAAQ,MAC9BD,EAASC,aAAa,KAAM,cAc5B,IAbA,IAAMC,EAAW,IAAInB,EAAe,MAAOe,EAAW,CAAC,aAAaC,aAG9DI,EAAe,CACjB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,aAClE,CAAC,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAQ,MACvE,CAAC,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAChE,CAAC,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAC5D,CAAC,OAAQ,MAAO,MAAO,QAAS,IAAK,IAAK,IAAK,MAK1CV,GAFaZ,SAASC,cAAc,aAEhC,GAAGW,GAAK,EAAGA,IAAK,CACzB,IAAMW,EAAYvB,SAASS,cAAc,OACzCc,EAAUT,UAAUC,IAApB,OACAQ,EAAUH,aAAa,KAAvB,UAAgCR,IAChCS,EAASL,YAAYO,GAGzB,IAAK,IAAIX,EAAI,EAAGA,EAAIU,EAAaT,OAAQD,IAErC,IAAK,IAAIY,EAAI,EAAGA,EAAIF,EAAaV,GAAGC,OAAQW,IAAK,CAC7C,IAAMC,EAAczB,SAASS,cAAc,OAC3CgB,EAAYX,UAAUC,IAAI,gBAC1BU,EAAYC,UAAZ,UAA2BJ,EAAaV,GAAGY,IAC3CxB,SAAS2B,eAAT,UAA2Bf,EAAI,IAAKI,YAAYS,GAChDA,EAAYG,iBAAiB,QAASC,GAK9C,SAASA,EAAcC,GACnB,GAAuB,UAAnBvB,KAAKmB,UACL1B,SAAS2B,eAAe,cAAcI,OAAS,SAC5C,GAAuB,QAAnBxB,KAAKmB,UACZ1B,SAAS2B,eAAe,cAAcI,OAAS,YAC5C,GAAuB,SAAnBxB,KAAKmB,UACZ1B,SAAS2B,eAAe,cAAcI,OAAS,QAC5C,GAAuB,UAAnBxB,KAAKmB,UACZ1B,SAAS2B,eAAe,cAAcI,OAAS,QAC5C,GAAuB,SAAnBxB,KAAKmB,UACZ1B,SAAS2B,eAAe,cAAcI,OAAS,QAC5C,GAAuB,QAAnBxB,KAAKmB,UACZ1B,SAAS2B,eAAe,cAAcI,OAAS,QAC5C,GAAuB,QAAnBxB,KAAKmB,UACZ1B,SAAS2B,eAAe,cAAcI,OAAS,QAC5C,GAAuB,cAAnBxB,KAAKmB,UAA2B,CACvC,IAAIM,EAAchC,SAAS2B,eAAe,cAAcI,MACxDC,EAAcA,EAAYC,UAAU,EAAGD,EAAYnB,OAAS,GAC5Db,SAAS2B,eAAe,cAAcI,MAAQC,OAE9ChC,SAAS2B,eAAe,cAAcI,OAASxB,KAAKmB,UAK5D1B,SAAS4B,iBAAiB,WAAW,SAACM,GAClClC,SAAS2B,eAAe,cAAcI,OAASG,EAAaC,Q","sources":["webpack://siarhei/./src/index.js"],"sourcesContent":["import './style.scss';\r\n\r\n\r\n\r\nconst body = document.querySelector('body');\r\n\r\nclass elementBuilder {\r\n    constructor(type, parentElement, classes, attributes) {\r\n        this.element = document.createElement(type)\r\n        if (Array.isArray(classes)) {\r\n            for (let i = 0; i < classes.length; i++) {\r\n                this.element.classList.add(classes[i]);\r\n            }\r\n        }\r\n        if (Array.isArray(attributes)) {\r\n            for (let i = 0; i < attributes.length; i++) {\r\n                this.element.add.attributes(attributes[i])\r\n            }\r\n        }\r\n        parentElement.appendChild(this.element)\r\n\r\n\r\n    }\r\n    getElement() {\r\n        return this.element;\r\n    }\r\n}\r\n\r\nconst container = new elementBuilder('div', body, ['container']).getElement();\r\nconst textarea = new elementBuilder('textarea', container, ['textarea'],).getElement();\r\ntextarea.setAttribute('rows', '5');\r\ntextarea.setAttribute('cols', '10');\r\ntextarea.setAttribute('id', 'textareaId');\r\nconst keyboard = new elementBuilder('div', container, ['keyboard']).getElement();\r\n\r\n\r\nconst keys_en_rows = [\r\n    [\"`\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"-\", \"=\", \"Backspace\"],\r\n    [\"Tab\", \"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", \"[\", \"]\", `${\"\\\\\"}`],\r\n    [\"caps\", \"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \";\", \"'\", \"Enter\"],\r\n    [\"Shift\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \",\", \".\", \"/\", \"Shift\"],\r\n    [\"ctrl\", \"win\", \"alt\", \"space\", \"⇦\", \"⇧\", \"⇩\", \"⇨\"]\r\n];\r\n\r\nconst keyboardInner = document.querySelector('.keyboard');\r\n\r\nfor (let i = 1; i <= 5; i++) {\r\n    const rowCreate = document.createElement(\"div\");\r\n    rowCreate.classList.add(`row`);\r\n    rowCreate.setAttribute('id', `${i}`);\r\n    keyboard.appendChild(rowCreate);\r\n}\r\n\r\nfor (let i = 0; i < keys_en_rows.length; i++) {\r\n\r\n    for (let k = 0; k < keys_en_rows[i].length; k++) {\r\n        const keyboardDiv = document.createElement('div');\r\n        keyboardDiv.classList.add('keyboard-key')\r\n        keyboardDiv.innerHTML = `${keys_en_rows[i][k]}`;\r\n        document.getElementById(`${i + 1}`).appendChild(keyboardDiv);\r\n        keyboardDiv.addEventListener('click', keyboardClick);\r\n\r\n    }\r\n}\r\n\r\nfunction keyboardClick(data) {\r\n    if (this.innerHTML === 'space') {\r\n        document.getElementById('textareaId').value += ' ';\r\n    } else if (this.innerHTML === 'Tab') {\r\n        document.getElementById('textareaId').value += '    ';\r\n    } else if (this.innerHTML === 'caps') {\r\n        document.getElementById('textareaId').value += '';\r\n    } else if (this.innerHTML === 'Shift') {\r\n        document.getElementById('textareaId').value += '';\r\n    } else if (this.innerHTML === 'ctrl') {\r\n        document.getElementById('textareaId').value += '';\r\n    } else if (this.innerHTML === 'win') {\r\n        document.getElementById('textareaId').value += '';\r\n    } else if (this.innerHTML === 'alt') {\r\n        document.getElementById('textareaId').value += '';\r\n    } else if (this.innerHTML === 'Backspace') {\r\n        let currentText = document.getElementById('textareaId').value;\r\n        currentText = currentText.substring(0, currentText.length - 1);\r\n        document.getElementById('textareaId').value = currentText;\r\n    } else {\r\n        document.getElementById('textareaId').value += this.innerHTML;\r\n    }\r\n\r\n\r\n}\r\ndocument.addEventListener('keydown', (keyboardPush) => {\r\n    document.getElementById('textareaId').value += keyboardPush.key;\r\n\r\n\r\n})\r\n"],"names":["body","document","querySelector","elementBuilder","type","parentElement","classes","attributes","this","element","createElement","Array","isArray","i","length","classList","add","appendChild","container","getElement","textarea","setAttribute","keyboard","keys_en_rows","rowCreate","k","keyboardDiv","innerHTML","getElementById","addEventListener","keyboardClick","data","value","currentText","substring","keyboardPush","key"],"sourceRoot":""}